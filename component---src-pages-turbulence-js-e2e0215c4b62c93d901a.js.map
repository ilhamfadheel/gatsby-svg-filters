{"version":3,"sources":["webpack:///./src/components/turbulence.js","webpack:///./src/images/sea.js","webpack:///./src/images/sea-map.js","webpack:///./src/pages/turbulence.js"],"names":["Turbulence","align","style","maxWidth","margin","class","id","x","y","width","height","numOctaves","seed","baseFrequency","scale","in","xlinkHref","attributeName","dur","keyTimes","values","repeatCount","Sea","data","fluid","placeholderImage","childImageSharp","Seamap","TurbulencePage","title","to","color","className"],"mappings":"uIAuBeA,EArBI,WAClB,OACO,oCACA,yBAAKC,MAAM,SAASC,MAAO,CAACC,SAAU,QAASC,OAAQ,SACnD,yBAAKC,MAAM,kBAAkBJ,MAAM,UAC/B,yBAAKI,MAAM,WAGnB,6BACI,4BAAQC,GAAG,aAAaC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,QACpD,kCAAcJ,GAAG,aAAaK,WAAW,IAAIC,KAAK,IAAIC,cAAc,cACpE,uCAAmBC,MAAM,KAAKC,GAAG,kBACjC,6BAASC,UAAU,cAAcC,cAAe,gBAAiBC,IAAK,MACtEC,SAAU,UAAWC,OAAO,gCAAgCC,YAAY,oB,qDCgBzEC,EAhBH,WACV,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBF,S,SCG5CG,EAhBA,WACb,IAAMJ,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBF,SCmC5CI,UApDQ,kBACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,eACX,iCACE,uBAAG5B,MAAM,UACT,kBAAC,OAAD,CAAM6B,GAAG,KACP,kBAAC,IAAD,OAEA,iEAEF,uQAIA,6BAJA,qFAOA,yBAAK7B,MAAM,UACP,yBAAKC,MAAO,CAACO,MAAM,OAASN,SAAS,UACnC,kBAAC,EAAD,MACA,uBAAGF,MAAM,UAAT,YAIF,yBAAKC,MAAO,CAACO,MAAM,OAASN,SAAS,UACnC,kBAAC,EAAD,MACA,uBAAGF,MAAM,UAAT,iBAKR,uBAAGA,MAAM,QAAT,6BACA,kBAAC,EAAD,MACA,uBAAGA,MAAM,UAAT,+CACkD,uBAAGI,MAAM,oBAE3D,6BACI,4BACA,kBAAC,OAAD,CACAyB,GAAG,IACH5B,MAAO,CACH6B,MAAM,YAGV,uBAAGC,UAAU,sBAAb,KANA,wB","file":"component---src-pages-turbulence-js-e2e0215c4b62c93d901a.js","sourcesContent":["import React from 'react'\n\nconst Turbulence = () => {\n\treturn (\n        <>\n        <div align=\"center\" style={{maxWidth: \"634px\", margin: \"auto\"}}>\n            <div class=\"backgroundbeach\" align=\"center\" >\n                <div class=\"water\">\n                </div>\n            </div>\n        <svg>\n            <filter id=\"turbulence\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n                <feTurbulence id=\"sea-filter\" numOctaves=\"3\" seed=\"2\" baseFrequency=\"0.02 0.05\"></feTurbulence>\n                <feDisplacementMap scale=\"20\" in=\"SourceGraphic\"></feDisplacementMap>\n                <animate xlinkHref=\"#sea-filter\" attributeName={\"baseFrequency\"} dur={\"60s\"} \n                keyTimes={\"0;0.5;1\"} values=\"0.02 0.06;0.04 0.08;0.02 0.06\" repeatCount=\"indefinite\"/>\n            </filter>\n        </svg>\n        </div>\n        </>\n\t)\n}\n\nexport default Turbulence\n\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Sea = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"sea.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Sea\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Seamap = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"sea-map.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Seamap\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Turbulence from \"../components/turbulence\"\nimport \"../components/turbulence.css\"\nimport { Link } from \"gatsby\"\nimport Sprite from \"../images/sprite\"\nimport Sea from \"../images/sea\"\nimport Seamap from \"../images/sea-map\"\n\nconst TurbulencePage = () => (\n  <Layout>\n    <SEO title=\"Turbulence\" />\n    <article>\n      <p align=\"center\">\n      <Link to=\"/\" >\n        <Sprite/>\n      </Link>\n        <h1>Turbulence Effect Implementation</h1>\n      </p>\n      <p>\n      The &lt;feTurbulence&gt; SVG filter primitive creates an image using the Perlin turbulence function. \n      It allows the synthesis of artificial textures like clouds or marble. \n      The resulting image will fill the entire filter primitive subregion.\n      <br/>\n      The two images shown below are used to make up for the Turbulence Implementation.\n      </p>\n      <div align=\"center\">\n          <div style={{width: `100%`, maxWidth: `634px`}} >\n            <Sea/>\n            <p align=\"center\">\n             Sea.jpg\n            </p>\n          </div>\n          <div style={{width: `100%`, maxWidth: `634px`}}>\n            <Seamap/>\n            <p align=\"center\">\n                Sea-map.png\n            </p>\n          </div>\n      </div>\n    <p align=\"left\">SVG Turbulence in effect:</p>\n    <Turbulence/>\n    <p align=\"center\">\n          The effect is viewed better in Desktop View <i class=\"fas fa-desktop\"></i>\n    </p>\n    <div>\n        <h4>\n        <Link \n        to=\"/\"\n        style={{\n            color: `#0366d6`,\n        }}\n        >\n        <i className=\"fas fa-arrow-right\"> </i>\n        {` `}\n        Go to Home</Link>\n        </h4>\n    </div>\n    </article>\n  </Layout>\n)\nexport default TurbulencePage\n"],"sourceRoot":""}